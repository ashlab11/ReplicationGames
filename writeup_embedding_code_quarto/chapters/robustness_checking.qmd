# Robustness checking and exploration {#robustness}

```{r}
#| label: input_data
#| code-summary: "Input cleaned data"

library(pacman)
p_load(tidyverse, data.table, haven, glue, Hmisc, here, fixest, knitr, kableExtra)

rm(list=ls())
gc()


# read in dta file, Clara likes working with data table format
survey = read_dta(here::here("OriginalFiles", "Survey.dta"))
dts = read_dta(here::here("OriginalFiles", "Replication_Dataset.dta")) %>% data.table()

```



We proposed a range of robustness tests. We were able to do a subset of these.

## Rates of voting for each car group split: implication for identification

We [aimed to] present a simple comparison of the Lega voting rates, voting changes, and other outcomes by each car-ownership group. (see below on functional forms)

## Main results (table 2, recoded)

```{r}
#| label: recode_table_2
#| code-summary: "Table 2 recoded"
 

# Table 2 ------

# Keep the same choices made by the authors
library(fixest)

mod1 = feols(vote_lega_euro ~ dummy_diesel + dummy_euro_4 + dummy_diesel*dummy_euro_4, 
             data = dts[target!=3 & target!=4 & no_answer_euro==0, ])

mod2 = feols(vote_lega_euro ~ dummy_diesel + dummy_euro_4 + dummy_diesel*dummy_euro_4
             + age + as.factor(female) | EDU1 + EDU2 + EDU3 + EDU4 + profile_gross_personal_eu, 
             data = dts[target!=3 & target!=4 & no_answer_euro==0, ],
             vcov = "hetero")

mod3 = feols(vote_lega_euro ~ dummy_diesel_ass + dummy_euro_4_ass + diesel_euro4_ass
             + age + female + dummy_car_unknown | EDU1 + EDU2 + EDU3 + EDU4 + profile_gross_personal_eu, 
             data = dts[target!=3 & no_answer_euro==0, ],
             vcov = "hetero")

mod4 = feols(vote_lega_euro ~ dummy_diesel + dummy_euro_4 + dummy_diesel*dummy_euro_4
             + age + female + vote_lega_2018 | EDU1 + EDU2 + EDU3 + EDU4 + profile_gross_personal_eu, 
             data = dts[target!=3 & target!=4 & no_answer_euro==0 & no_answer_2018==0, ],
             vcov = "hetero")

mod5 = feols(vote_lega_euro ~ dummy_diesel + dummy_euro_4 + dummy_diesel*dummy_euro_4
             + age + female + vote_lega_regional | EDU1 + EDU2 + EDU3 + EDU4 + profile_gross_personal_eu, 
             data = dts[target!=3 & target!=4 & no_answer_euro==0 & no_answer_regional==0, ],
             vcov = "hetero")

mod6 = feols(vote_lega_euro ~ dummy_diesel + dummy_euro_4 + dummy_diesel*dummy_euro_4
             + age + female + vote_lega_municipal | EDU1 + EDU2 + EDU3 + EDU4 + profile_gross_personal_eu, 
             data = dts[target!=3 & target!=4 & no_answer_euro==0 & no_answer_municipal==0, ],
             vcov = "hetero")

# Save
etable(mod1,mod2,mod3,mod4,mod5,mod6,
       keep = c("dummy_diesel", "dummy_euro_4", "diesel_euro4"),
  digits=3) %>%
  kable(format = "html", escape = FALSE) %>%
      kable_styling

```

## Alternate control/treatment splits

I don't think we did this

## Functional form {#functional}

The main outcome variable is binary 0/1. The authors consider linear models throughout. I (David Reinstein) believe their identification implicitly depends on

-   each of the unmeasured underlying characteristics (picked up by the proxy control in 'difference') each being associated with the voting outcome linearly on 'percentage point voting for Lega' ... so the each the

But the treated and groups might have started from a different baseline level of voting for Lega (check this)

If the true model is nonlinear (e.g., proportional, or with ceiling effects), the results here may be misleading. E.g., suppose the true effect of the policy on voting was the same for each car-ownership group as a percentage of the initial vote. Inappropriately estimating a linear model would find a substantial 'difference in difference' between these groups, even though the effect did not interact with car ownership itself.

@chen_roth cite Wooldridge 2023 

> An alternative identifying assumption is to impose that, in the absence of treatment, the percentage changes in the mean would have been the same for the treated and control group. As in Wooldridge (2023), this can be formalized using a “ratio” version of the parallel trends assumption,

\[
\frac{E[Y_{it}(0) | D_i = 1, Post_t = 1]}{E[Y_{it}(0) | D_i = 1, Post_t = 0]} = \frac{E[Y_{it}(0) | D_i = 0, Post_t = 1]}{E[Y_{it}(0) | D_i = 0, Post_t = 0]}
\]

We probably don't have time to test for proportional trends (as well as limited data for a powerful test). But it seems an equally-plausible model off-the cuff. Chen and Roth offer an estimation strategy 


> Conveniently, this estimate can also be obtained using Poisson QMLE to estimate  $Y_{it} = \exp(\beta_0 + D_i \times Post_t \beta_1 + D_i\beta_2 + Post_t\beta_3)\epsilon_{it}$ 

> and then computing $\hat{\theta}_{ATT\%} = \exp(\hat{\beta}_1) - 1 = -0.82$ as shown in column (1) of Table 6.

Estimate this as a logit model? Other specifications like proportional hazards? [Roth recommends Quasi-poisson](https://www.jonathandroth.com/assets/files/LogUniqueHOD0_Draft_Accepted.pdf#page=25.45) See section 5.2, "A DiD setting: Sequeira (2016)"

We re-ran the model as a Poisson model. Results were qualitatively similar at a glance. 


```{r}
# Table 2 with Poisson ------

mod1p = fepois(vote_lega_euro ~ dummy_diesel + dummy_euro_4 + dummy_diesel*dummy_euro_4, 
             data = dts[target!=3 & target!=4 & no_answer_euro==0, ])
summary(mod1p)

mod2p = fepois(vote_lega_euro ~ dummy_diesel + dummy_euro_4 + dummy_diesel*dummy_euro_4
             + age + as.factor(female) | EDU1 + EDU2 + EDU3 + EDU4 + profile_gross_personal_eu, 
             data = dts[target!=3 & target!=4 & no_answer_euro==0, ],
             vcov = "hetero")
summary(mod2p)

mod3p = fepois(vote_lega_euro ~ dummy_diesel_ass + dummy_euro_4_ass + diesel_euro4_ass
             + age + female + dummy_car_unknown | EDU1 + EDU2 + EDU3 + EDU4 + profile_gross_personal_eu, 
             data = dts[target!=3 & no_answer_euro==0, ],
             vcov = "hetero")
summary(mod3p)

mod4p = fepois(vote_lega_euro ~ dummy_diesel + dummy_euro_4 + dummy_diesel*dummy_euro_4
             + age + female + vote_lega_2018 | EDU1 + EDU2 + EDU3 + EDU4 + profile_gross_personal_eu, 
             data = dts[target!=3 & target!=4 & no_answer_euro==0 & no_answer_2018==0, ],
             vcov = "hetero")
summary(mod4p)

mod5p = fepois(vote_lega_euro ~ dummy_diesel + dummy_euro_4 + dummy_diesel*dummy_euro_4
             + age + female + vote_lega_regional | EDU1 + EDU2 + EDU3 + EDU4 + profile_gross_personal_eu, 
             data = dts[target!=3 & target!=4 & no_answer_euro==0 & no_answer_regional==0, ],
             vcov = "hetero")
summary(mod5p)

mod6p = fepois(vote_lega_euro ~ dummy_diesel + dummy_euro_4 + dummy_diesel*dummy_euro_4
             + age + female + vote_lega_municipal | EDU1 + EDU2 + EDU3 + EDU4 + profile_gross_personal_eu, 
             data = dts[target!=3 & target!=4 & no_answer_euro==0 & no_answer_municipal==0, ],
             vcov = "hetero")
summary(mod6[])

# Save
etable(mod1p,mod2p,mod3p,mod4p,mod5p,mod6p,
       keep = c("dummy_diesel", "dummy_euro_4", "diesel_euro4"), 
  digits=3) %>%
  kable(caption = "poisson, raw coefs", format = "html", escape = FALSE, digits=3) %>%
      kable_styling

```

